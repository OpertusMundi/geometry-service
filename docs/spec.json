{"info": {"description": "\n### A service to perform geometric operations on geospatial datasets.\n\nThe *geometry service* offers the ability to apply geometric operations on one or more spatial files. Following the upload of a spatial file, the requested geometric operation generates, promptly or asynchronously, a new spatial file available for download. Depending on the operation, the generated file could\n\n- contain new geometries (**constructive** operations) constructed from the original ones,\n- be a filtered subset of the initial file (**filter** operations), or\n- be a result of a spatial join (**join** operations) of two files.\n", "contact": {"email": "pmitropoulos@getmap.gr"}, "title": "Geometry API", "version": "0.0.1"}, "externalDocs": {"description": "GitHub", "url": "https://github.com/OpertusMundi/geometry-service"}, "paths": {"/static/{filename}": {}, "/constructive/centroid": {"post": {"summary": "Replace geometries with their centroids.", "description": "Create a new spatial file with geometries constructed by their centroids.", "tags": ["Constructive"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/constructiveForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/constructiveFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/constructive/convex_hull": {"post": {"summary": "Replace geometries with their convex hull.", "description": "Create a new spatial file with geometries constructed by their convex hull.", "tags": ["Constructive"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/constructiveForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/constructiveFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/constructive/simplify": {"post": {"summary": "Simplify geometries.", "description": "Create a new spatial file with simplified geometries.", "tags": ["Constructive"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/simplifyConstructiveForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/simplifyConstructiveFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/filter/nearest": {"post": {"summary": "Find the nearest geometries.", "description": "Create a new spatial file sorted by the nearest geometries. A new column *distance* is added to the attribute table with the distance specified in the CRS units.", "tags": ["Filter"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/filterForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/filterFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/filter/within": {"post": {"summary": "Apply a within filter on the spatial file.", "description": "Create a new spatial file, subset of the source, with the condition that each feature in this dataset is completely inside the given geometry.", "tags": ["Filter"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/filterForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/filterFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/filter/within_buffer": {"post": {"summary": "Apply a within buffer filter.", "description": "Create a new spatial file, subset of the source, with the condition that each feature in this dataset is within a given radius from the given geometry.", "tags": ["Filter"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/bufferFilterForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/bufferFilterFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/filter/travel_distance": {"post": {"summary": "Within travel distance.", "description": "Create a new spatial file, subset of the source, with the condition that each feature in this dataset is within a given travel distance from a source point.", "tags": ["Filter"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/travelDistanceFilterForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/travelDistanceFilterFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/filter/travel_time": {"post": {"summary": "Within travel time.", "description": "Create a new spatial file, subset of the source, with the condition that each feature in this dataset is within a given travel time from a source point.", "tags": ["Filter"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/travelTimeFilterForm"}}, "multipart/form-data": {"schema": {"$ref": "#/components/schemas/travelTimeFilterFormMultipart"}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/join/contains": {"post": {"summary": "Spatial join on two spatial files drived by contains relationship.", "description": "Create a new spatial file on the condition that the geometry of the **other** dataset is completely inside the geometry of the **resource**. The new file contains attributes from both datasets, prefixed and suffixed according to the given parameters, and geometry from the *resource* dataset.", "tags": ["Join"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/joinForm"}}, "multipart/form-data": {"schema": {"oneOf": [{"$ref": "#/components/schemas/joinFormMultipartBoth"}, {"$ref": "#/components/schemas/joinFormMultipartResource"}, {"$ref": "#/components/schemas/joinFormMultipartOther"}]}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/join/within": {"post": {"summary": "Spatial join on two spatial files drived by within relationship.", "description": "Create a new spatial file on the condition that the geometry of the **resource** dataset is completely inside the geometry of the **other**. The new file contains attributes from both datasets, prefixed and suffixed according to the given parameters, and geometry from the *resource* dataset.", "tags": ["Join"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/joinForm"}}, "multipart/form-data": {"schema": {"oneOf": [{"$ref": "#/components/schemas/joinFormMultipartBoth"}, {"$ref": "#/components/schemas/joinFormMultipartResource"}, {"$ref": "#/components/schemas/joinFormMultipartOther"}]}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/join/intersects": {"post": {"summary": "Spatial join on two spatial files drived by intersects relationship.", "description": "Create a new spatial file on the condition that the two geometries intersect. The new file contains attributes from both datasets, prefixed and suffixed according to the given parameters, and geometry from the *resource* dataset.", "tags": ["Join"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/joinForm"}}, "multipart/form-data": {"schema": {"oneOf": [{"$ref": "#/components/schemas/joinFormMultipartBoth"}, {"$ref": "#/components/schemas/joinFormMultipartResource"}, {"$ref": "#/components/schemas/joinFormMultipartOther"}]}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/join/dwithin": {"post": {"summary": "Spatial join on two spatial files drived by within distance relationship.", "description": "Create a new spatial file on the condition that the two geometries are within the given distance. The new file contains attributes from both datasets, prefixed and suffixed according to the given parameters, and geometry from the *resource* dataset.", "tags": ["Join"], "parameters": [{"$ref": "#/components/parameters/idempotencyKey"}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/dwithinJoinForm"}}, "multipart/form-data": {"schema": {"oneOf": [{"$ref": "#/components/schemas/dwithinJoinFormMultipartBoth"}, {"$ref": "#/components/schemas/dwithinJoinFormMultipartResource"}, {"$ref": "#/components/schemas/dwithinJoinFormMultipartOther"}]}}}}, "responses": {"200": {"$ref": "#/components/responses/promptResultResponse"}, "202": {"$ref": "#/components/responses/deferredResponse"}, "204": {"$ref": "#/components/responses/noContentResponse"}, "400": {"$ref": "#/components/responses/validationErrorResponse"}}}}, "/jobs/": {"get": {"summary": "Get the running processes.", "description": "Get the running processes among all sessions.", "tags": ["Jobs"], "responses": {"200": {"description": "The list of the running processes.", "content": {"application/json": {"schema": {"type": "array", "items": {"description": "Details of the process.", "type": "object", "properties": {"ticket": {"type": "string", "description": "The ticket assigne to the process.", "example": "caff960ab6f1627c11b0de3c6406a140"}, "idempotencyKey": {"type": "string", "description": "The X-Idempotency-Key sent in the headers of the request (null if the request was not associated with an idempotency key).", "example": "e5d16e99-dee1-4d16-acce-ca0f20a83a0a"}, "requestType": {"type": "string", "description": "Type of the request."}, "initiated": {"type": "string", "format": "date-time", "description": "The timestamp of the request."}}}}}}}}}}, "/jobs/status": {"get": {"summary": "Returns the status of a process.", "description": "Returns the status of the process identified by a ticket or idempotency key.", "tags": ["Jobs"], "parameters": [{"name": "ticket", "in": "query", "schema": {"type": "string"}, "required": false, "description": "The request ticket (required if *idempotency-key* is not given)."}, {"name": "idempotency-key", "in": "query", "schema": {"type": "string"}, "required": false, "description": "The idempotency-key sent with the request (required if *ticket* is not given)."}], "responses": {"200": {"description": "The process was found and the response contains its status details.", "content": {"application/json": {"schema": {"type": "object", "properties": {"ticket": {"type": "string", "description": "Request ticket.", "example": "caff960ab6f1627c11b0de3c6406a140"}, "idempotencyKey": {"type": "string", "description": "The X-Idempotency-Key sent in the headers of the request (null if the request was not associated with an idempotency key).", "example": "e5d16e99-dee1-4d16-acce-ca0f20a83a0a"}, "requestType": {"type": "string", "enum": ["ingest", "export"], "description": "Type of the request."}, "initiated": {"type": "string", "format": "date-time", "description": "The timestamp of the request."}, "executionTime": {"type": "number", "format": "float", "description": "The execution time in seconds.", "example": 8.29}, "completed": {"type": "boolean", "description": "Whether the process has been completed."}, "success": {"type": "boolean", "description": "Whether the process has been completed succesfully."}, "errorMessage": {"type": "string", "description": "The error message in case of failure."}, "resource": {"type": "object", "description": "The resources associated with the process result.", "properties": {"link": {"type": "string", "description": "The link to download a resource resulted from an export request; null for any other type of request.", "example": "/download/my_dataset.tar.gz"}, "outputPath": {"type": "string", "description": "The relative path of the resource resulted from an export request in the output directory; null for any other type of request or if copy to the output directory was not requested.", "example": "2102/{token}/caff960ab6f1627c11b0de3c6406a140/my_dataset.tar.gz"}}}}}}}}, "400": {"description": "Both query parameters are missing.", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string", "description": "Error message", "example": "One of 'ticket', 'idempotency-key' is required in query parameters."}}}}}}, "404": {"description": "The ticket or idempotency-key not found.", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string", "description": "Error message", "example": "Process not found."}}}}}}}}}, "/download/{ticket}/{filename}": {"get": {"summary": "Download a resource.", "tags": ["Misc"], "parameters": [{"name": "ticket", "in": "path", "schema": {"type": "string"}, "description": "The ticket of the request resulted in the resource.", "required": true}, {"name": "filename", "in": "path", "schema": {"type": "string"}, "description": "The requested file name.", "required": true}], "responses": {"200": {"description": "The requested file.", "content": {"application/x-tar": {"schema": {"type": "string", "format": "binary"}}}}, "404": {"description": "Ticket not found.", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string", "description": "Error message", "example": "Ticket not found."}}}}}}, "410": {"description": "Resource not available.", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string", "description": "Error message", "example": "Resource not available."}}}}}}}}}, "/health": {"get": {"summary": "Get health status.", "tags": ["Misc"], "responses": {"200": {"description": "An object with status information.", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string", "enum": ["OK", "FAILED"], "description": "A status of 'OK' or 'FAILED'."}, "details": {"type": "object", "description": "The reason of failure for each component, or 'OK' if not failed.", "properties": {"gdal": {"type": "string", "example": "OK"}, "filesystem": {"type": "string", "example": "OK"}, "db": {"type": "string", "example": "OK"}}}}}}}}}}}}, "openapi": "3.0.2", "components": {"schemas": {"constructiveForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}}, "required": ["resource"]}, "constructiveFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}}, "required": ["resource"]}, "simplifyConstructiveForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "tolerance": {"type": "number", "format": "float", "description": "The maximum allowed geometry displacement. The higher this value, the smaller the number of vertices in the resulting geometry.", "example": "1.0"}, "preserve_topology": {"type": "boolean", "description": "If set to *true*, the operation will avoid creating invalid geometries.", "default": "false"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}}, "required": ["tolerance", "resource"]}, "simplifyConstructiveFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "tolerance": {"type": "number", "format": "float", "description": "The maximum allowed geometry displacement. The higher this value, the smaller the number of vertices in the resulting geometry.", "example": "1.0"}, "preserve_topology": {"type": "boolean", "description": "If set to *true*, the operation will avoid creating invalid geometries.", "default": "false"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}}, "required": ["tolerance", "resource"]}, "travelDistanceFilterForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "point_lat": {"type": "number", "format": "float", "description": "Latitude of the source point in WGS 84 (EPSG:4326).", "example": 37.968312}, "point_lon": {"type": "number", "format": "float", "description": "Lotitude of the source point in WGS 84 (EPSG:4326).", "example": 23.710438}, "costing": {"type": "string", "description": "Costing algorithm (one of *auto*, *bicyle*, *pedestrian*, *bikeshare* or *bus*; see [https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models](https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models)).", "enum": ["auto", "bicycle", "pedestrian", "bikeshare", "bus"], "default": "auto"}, "distance": {"type": "number", "format": "float", "description": "A floating point value specifying the distance in kilometers (max: 200).", "minimum": 0.0, "maximum": 200.0, "example": 10}}, "required": ["resource", "point_lat", "point_lon", "distance"]}, "travelDistanceFilterFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "point_lat": {"type": "number", "format": "float", "description": "Latitude of the source point in WGS 84 (EPSG:4326).", "example": 37.968312}, "point_lon": {"type": "number", "format": "float", "description": "Lotitude of the source point in WGS 84 (EPSG:4326).", "example": 23.710438}, "costing": {"type": "string", "description": "Costing algorithm (one of *auto*, *bicyle*, *pedestrian*, *bikeshare* or *bus*; see [https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models](https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models)).", "enum": ["auto", "bicycle", "pedestrian", "bikeshare", "bus"], "default": "auto"}, "distance": {"type": "number", "format": "float", "description": "A floating point value specifying the distance in kilometers (max: 200).", "minimum": 0.0, "maximum": 200.0, "example": 10}}, "required": ["resource", "point_lat", "point_lon", "distance"]}, "travelTimeFilterForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "point_lat": {"type": "number", "format": "float", "description": "Latitude of the source point in WGS 84 (EPSG:4326).", "example": 37.968312}, "point_lon": {"type": "number", "format": "float", "description": "Lotitude of the source point in WGS 84 (EPSG:4326).", "example": 23.710438}, "costing": {"type": "string", "description": "Costing algorithm (one of *auto*, *bicyle*, *pedestrian*, *bikeshare* or *bus*; see [https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models](https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models)).", "enum": ["auto", "bicycle", "pedestrian", "bikeshare", "bus"], "default": "auto"}, "time": {"type": "number", "format": "float", "description": "A floating point value specifying the time in minutes (max: 120).", "minimum": 0.0, "maximum": 120.0, "example": 60}}, "required": ["resource", "point_lat", "point_lon", "time"]}, "travelTimeFilterFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "point_lat": {"type": "number", "format": "float", "description": "Latitude of the source point in WGS 84 (EPSG:4326).", "example": 37.968312}, "point_lon": {"type": "number", "format": "float", "description": "Lotitude of the source point in WGS 84 (EPSG:4326).", "example": 23.710438}, "costing": {"type": "string", "description": "Costing algorithm (one of *auto*, *bicyle*, *pedestrian*, *bikeshare* or *bus*; see [https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models](https://valhalla.readthedocs.io/en/latest/api/turn-by-turn/api-reference/#costing-models)).", "enum": ["auto", "bicycle", "pedestrian", "bikeshare", "bus"], "default": "auto"}, "time": {"type": "number", "format": "float", "description": "A floating point value specifying the time in minutes (max: 120).", "minimum": 0.0, "maximum": 120.0, "example": 60}}, "required": ["resource", "point_lat", "point_lon", "time"]}, "filterForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "wkt": {"type": "string", "description": "The Well-Known-Text representation of the geometry to filter with. It is meant to be in the same srid as the spatial file.", "example": "POLYGON((6.4 49., 6.5 50., 6.6 49.5, 6.4 49.))"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}}, "required": ["wkt", "resource"]}, "filterFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "wkt": {"type": "string", "description": "The Well-Known-Text representation of the geometry to filter with. It is meant to be in the same srid as the spatial file.", "example": "POLYGON((6.4 49., 6.5 50., 6.6 49.5, 6.4 49.))"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}}, "required": ["wkt", "resource"]}, "bufferFilterForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "wkt": {"type": "string", "description": "The Well-Known-Text representation of the geometry to filter with. It is meant to be in the same srid as the spatial file.", "example": "POLYGON((6.4 49., 6.5 50., 6.6 49.5, 6.4 49.))"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "radius": {"type": "number", "format": "float", "description": "The radius from the given geometry that the geometries should lie within. The radius is specified in units defined by the srid.", "example": 0.1}}, "required": ["wkt", "radius", "resource"]}, "bufferFilterFormMultipart": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "wkt": {"type": "string", "description": "The Well-Known-Text representation of the geometry to filter with. It is meant to be in the same srid as the spatial file.", "example": "POLYGON((6.4 49., 6.5 50., 6.6 49.5, 6.4 49.))"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "radius": {"type": "number", "format": "float", "description": "The radius from the given geometry that the geometries should lie within. The radius is specified in units defined by the srid.", "example": 0.1}}, "required": ["wkt", "radius", "resource"]}, "joinForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "other": {"type": "string", "description": "A resolvable path to the **other** spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}}, "required": ["resource", "other"]}, "joinFormMultipartBoth": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "other": {"type": "string", "format": "binary", "description": "Stream of the **other** spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}}, "required": ["resource", "other"]}, "joinFormMultipartResource": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "other": {"type": "string", "description": "A resolvable path to the **other** spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}}, "required": ["resource", "other"]}, "joinFormMultipartOther": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "other": {"type": "string", "format": "binary", "description": "Stream of the **other** spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}}, "required": ["resource", "other"]}, "dwithinJoinForm": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "other": {"type": "string", "description": "A resolvable path to the **other** spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "distance": {"type": "number", "format": "float", "description": "The distance that the two geometries should be within. It is specified in units defined by the srid of the *resource* spatial file.", "example": 4.3}}, "required": ["resource", "other", "distance"]}, "dwithinJoinFormMultipartBoth": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "other": {"type": "string", "format": "binary", "description": "Stream of the **other** spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "distance": {"type": "number", "format": "float", "description": "The distance that the two geometries should be within. It is specified in units defined by the srid of the *resource* spatial file.", "example": 4.3}}, "required": ["resource", "other", "distance"]}, "dwithinJoinFormMultipartResource": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "format": "binary", "description": "Stream of the spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "other": {"type": "string", "description": "A resolvable path to the **other** spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "distance": {"type": "number", "format": "float", "description": "The distance that the two geometries should be within. It is specified in units defined by the srid of the *resource* spatial file.", "example": 4.3}}, "required": ["resource", "other", "distance"]}, "dwithinJoinFormMultipartOther": {"type": "object", "properties": {"response": {"type": "string", "description": "Response type, either *prompt* to initiate the process promptly and wait for the response, either *deferred* to finish the process asynchronously.", "enum": ["prompt", "deferred"], "default": "deferred"}, "download": {"type": "boolean", "description": "**For prompt requests only.** If *true* the response will be a stream, otherwise its path will be returned (ignored for deferred requests).", "default": "false"}, "delimiter": {"type": "string", "description": "In case the file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "lat": {"type": "string", "description": "The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "lon": {"type": "string", "description": "The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "crs": {"type": "string", "description": "The Coordinate Reference System of the geometries. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "encoding": {"type": "string", "description": "The encoding of the file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "other_delimiter": {"type": "string", "description": "In case the **other** file is a delimited text file, the character used to separate values. Ignored for not delimited files.", "example": ";", "default": ","}, "other_lat": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to latitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "latitude"}, "other_lon": {"type": "string", "description": "**For the other file.** The attribute name in delimited text files that corresponds to longitude, if the geometry is given in means of lat, lon. Ignored for not delimited files.", "example": "longitude"}, "other_geom": {"type": "string", "description": "The attribute name in delimited text files that corresponds to WKT geometry. Default is 'WKT'; ignored for not delimited files **or** when 'lat', 'lon' are provided.", "example": "geometry"}, "other_crs": {"type": "string", "description": "The Coordinate Reference System of the geometries in the **other** spatial file. If not given, the CRS information is obtained by the dataset; **required for** spatial files that do not provide CRS information, e.g. CSV.", "example": "EPSG:4326"}, "other_encoding": {"type": "string", "description": "The encoding of the **other** file. If not given, the encoding is automatically detected.", "example": "UTF-8"}, "how": {"type": "string", "description": "Type of the spatial join.", "enum": ["left", "right", "inner"], "default": "inner"}, "lprefix": {"type": "string", "description": "Prefix for the *left* attributes.", "example": "l_"}, "rprefix": {"type": "string", "description": "Prefix for the *right* attributes.", "example": "r_"}, "lsuffix": {"type": "string", "description": "Suffix for the *left* attributes.", "example": "_l"}, "rsuffix": {"type": "string", "description": "Suffix for the *right* attributes.", "example": "_r"}, "resource": {"type": "string", "description": "A resolvable path to the spatial file, relative to the **input directory**. The file could be in compressed form: zipped or tar(.gz) archive.", "example": "/datasets/shapefile.tar.gz"}, "other": {"type": "string", "format": "binary", "description": "Stream of the **other** spatial file. The file could be in compressed form: zipped or tar(.gz) archive."}, "distance": {"type": "number", "format": "float", "description": "The distance that the two geometries should be within. It is specified in units defined by the srid of the *resource* spatial file.", "example": 4.3}}, "required": ["resource", "other", "distance"]}}, "responses": {"validationErrorResponse": {"description": "Form validation error.", "content": {"application/json": {"schema": {"type": "object", "description": "The key is the request body key.", "additionalProperties": {"type": "array", "items": {"type": "string", "description": "Description of validation error."}}, "example": {"crs": ["Field must be a valid CRS."]}}}}}, "deferredResponse": {"description": "Request accepted for process.", "content": {"application/json": {"schema": {"type": "object", "properties": {"type": {"type": "string", "description": "Request type.", "enum": ["prompt", "deferred"], "example": "deferred"}, "ticket": {"type": "string", "description": "The unique ticket assigned to the request.", "example": "caff960ab6f1627c11b0de3c6406a140"}, "statusUri": {"type": "string", "description": "The URI to poll for the status of the request.", "example": "/jobs/status?ticket=caff960ab6f1627c11b0de3c6406a140"}}}}}}, "promptResultResponse": {"content": {"application/x-tar": {"description": "W.", "schema": {"type": "string", "format": "binary", "description": "Resulted spatial file (when form parameter *download* was set to true)."}}, "application/json": {"schema": {"type": "object", "description": "When form parameter *download* was set to false.", "properties": {"type": {"type": "string", "description": "Request type.", "enum": ["prompt", "deferred"]}, "path": {"type": "string", "description": "The relative to the *output directory* path for the spatial file.", "example": "2103/3ba6a8b5ecea27db3c5f4e0159c63283/example.csv.gz"}}}}}}, "noContentResponse": {"description": "The operation resulted in an empty dataset."}}, "parameters": {"idempotencyKey": {"name": "X-Idempotence-Key", "description": "A unique idempotency key assigned to each request.", "required": false, "schema": {"type": "string"}, "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9", "in": "header"}}}}